{"version":3,"sources":["models/property.ts"],"names":[],"mappings":"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","file":"property.js","sourcesContent":["import * as Utils from '../lib/utils';\nimport { ProgramPart } from './program-part';\nimport { Comment } from './comment';\nimport { ProgramType } from './comment';\n\nexport class Property extends ProgramPart {\n\tprivate _containsValueArrayLiteral: boolean = false;\n\tprivate _containsValueFunction: boolean = false;\n\tprivate _containsValueObjectDeclaration: boolean = false;\n\tprivate _name: string;\n\tprivate _params: string;\n\tprivate _type: string;\n\tprivate _valueArrayParams: any;\n\tprivate _valueObjectParams: any;\n\n\tget derivedComment(): Comment {\n\t\tif (!this.comment || !this.comment.commentText) {\n\t\t\tthis.comment = this.comment ? this.comment : new Comment();\n\t\t\tlet type = this.type || 'Object';\n\t\t\tthis.comment.tags = ['@type {' + type + '}']\n\t\t\tthis.comment.isFor = ProgramType.Property;\n\t\t}\n\t\treturn this.comment;\n\t}\n\n\tget containsValueArrayLiteral() {\n\t\treturn this._containsValueArrayLiteral;\n\t}\n\n\tset containsValueArrayLiteral(containsValueArrayLiteral) {\n\t\tthis._containsValueArrayLiteral = containsValueArrayLiteral;\n\t}\n\n\tget containsValueFunction() {\n\t\treturn this._containsValueFunction;\n\t}\n\n\tset containsValueFunction(containsValueFunction) {\n\t\tthis._containsValueFunction = containsValueFunction;\n\t}\n\n\tget containsValueObjectDeclaration() {\n\t\treturn this._containsValueObjectDeclaration;\n\t}\n\n\tset containsValueObjectDeclaration(containsValueObjectDeclaration) {\n\t\tthis._containsValueObjectDeclaration = containsValueObjectDeclaration;\n\t}\n\n\tget name() {\n\t\treturn this._name;\n\t}\n\n\tset name(name) {\n\t\tthis._name = name;\n\t}\n\n\tget params() {\n\t\treturn this._params;\n\t}\n\n\tset params(params) {\n\t\tthis._params = params;\n\t}\n\n\tget type() {\n\t\treturn this._type;\n\t}\n\n\tset type(type) {\n\t\tthis._type = type;\n\t}\n\n\tget valueArrayParams() {\n\t\treturn this._valueArrayParams;\n\t}\n\n\tset valueArrayParams(valueArrayParams) {\n\t\tthis._valueArrayParams = valueArrayParams;\n\t}\n\n\tget valueObjectParams() {\n\t\treturn this._valueObjectParams;\n\t}\n\n\tset valueObjectParams(valueParams) {\n\t\tthis._valueObjectParams = valueParams;\n\t}\n\t/**\n\t * Parse the parameters of this property\n\t * @private\n\t * @returns {string}\n\t */\n\tprivate _parseParams(): string {\n\t\tlet partsArr = this.params ? this.params.split(',') : [];\n\t\tlet newParamStr = '{\\n';\n\t\tfor (let i = 0; i < partsArr.length; i++) {\n\t\t\tlet part = partsArr[i];\n\t\t\tif (this.containsValueFunction && part.indexOf('value:') > -1) {\n\t\t\t\tnewParamStr += this._parseValueFunction(part);\n\t\t\t\tnewParamStr += (i + 1) < partsArr.length ? ',\\n' : '\\n';\n\t\t\t} else if (this.containsValueObjectDeclaration && part.indexOf('value:') > -1) {\n\t\t\t\tnewParamStr += '\\t\\t\\t\\t' + this._parseValueObject();\n\t\t\t\tlet valueLen = this.valueObjectParams ? this.valueObjectParams.split(',').length - 1 : 0;\n\t\t\t\tnewParamStr += (i + 1) < (partsArr.length - valueLen) ? ',\\n' : '\\n';\n\t\t\t} else if (this.containsValueArrayLiteral && part.indexOf('value:') > -1) {\n\t\t\t\tnewParamStr += '\\t\\t\\t\\t' + this._parseValueArray();\n\t\t\t\tlet valueLen = this.valueArrayParams ? this.valueArrayParams.split(',').length - 1 : 0;\n\t\t\t\tnewParamStr += (i + 1) < (partsArr.length - valueLen) ? ',\\n' : '\\n';\n\t\t\t} else {\n\t\t\t\tlet regEx = /[/{/}\\n\\t]/g;\n\t\t\t\tif (part.indexOf('type') > -1) {\n\t\t\t\t\tregEx = /[/{/}\\n\\t']/g;\n\t\t\t\t}\n\t\t\t\tif ((this.containsValueObjectDeclaration || this.containsValueArrayLiteral) && !this._isPartOfValue(part)) {\n\t\t\t\t\tnewParamStr += '\\t\\t\\t\\t' + part.replace(regEx, '');\n\t\t\t\t\tnewParamStr += (i + 1) < partsArr.length ? ',\\n' : '\\n';\n\t\t\t\t} else if (!this.containsValueObjectDeclaration && !this.containsValueArrayLiteral) {\n\t\t\t\t\tnewParamStr += '\\t\\t\\t\\t' + part.replace(regEx, '');\n\t\t\t\t\tnewParamStr += (i + 1) < partsArr.length ? ',\\n' : '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnewParamStr += '\\t\\t\\t}';\n\t\treturn newParamStr;\n\t}\n\n\tprivate _isPartOfValue(part: string): boolean {\n\t\tlet partOfValue = false;\n\t\tif (part && this.containsValueObjectDeclaration) {\n\t\t\tlet valueObj = Utils.getObjectFromString(this.valueObjectParams);\n\t\t\tlet partMatch = /(?:^[\\{\\s\"]*([a-zA-Z0-9]+):(?:.)*)/.exec(part);\n\t\t\tif (partMatch) {\n\t\t\t\tlet key = partMatch[1];\n\t\t\t\tpartOfValue = valueObj.hasOwnProperty(key);\n\t\t\t}\n\t\t} else if (part && this.containsValueArrayLiteral) {\n\t\t\tlet valueArr = Utils.getArrayFromString(this.valueArrayParams);\n\t\t\tlet partMatch = /(?:['\"\\s]*([a-zA-Z]*)['\"\\s]*)/.exec(part);\n\t\t\tif (partMatch && partMatch[1]) {\n\t\t\t\tlet key = partMatch[1];\n\t\t\t\tpartOfValue = valueArr.indexOf(key) > -1;\n\t\t\t}\n\t\t}\n\t\treturn partOfValue;\n\t}\n\t/**\n\t * If this property contains a value property that is an array, this will\n\t * parse that array object and return an appropriate string\n\t * @private\n\t * @returns {string}\n\t */\n\tprivate _parseValueArray(): string {\n\t\tlet valueArrStr = 'value: [';\n\t\tlet arrayParts = this.valueArrayParams.split(',');\n\t\tfor (let i = 1; i < arrayParts.length; i++) {\n\t\t\tlet part = arrayParts[i];\n\t\t\tif (i === 1) {\n\t\t\t\tvalueArrStr += '\\n';\n\t\t\t}\n\t\t\tvalueArrStr += '\\t' + part.replace(/[\\]\\[\\n]/g, '');\n\t\t\tvalueArrStr += (i + 1) < arrayParts.length ? ',\\n' : '\\n';\n\t\t}\n\t\tif (arrayParts.length > 1) {\n\t\t\tvalueArrStr += '\\t\\t\\t\\t]';\n\t\t} else {\n\t\t\tvalueArrStr += ']';\n\t\t}\n\t\treturn valueArrStr;\n\t}\n\t/**\n\t * If this property contains a value property that is an object literal, this will\n\t * parse that object literal and return an appropriate string\n\t * @private\n\t * @returns {string}\n\t */\n\tprivate _parseValueObject(): string {\n\t\tlet objStr = 'value: {';\n\t\tlet partsArr = this.valueObjectParams ? this.valueObjectParams.split(',') : [];\n\t\tfor (let i = 0; i < partsArr.length; i++) {\n\t\t\tlet part = partsArr[i];\n\t\t\tif (i === 0) {\n\t\t\t\tobjStr += '\\n';\n\t\t\t}\n\t\t\tobjStr += '\\t\\t\\t\\t\\t' + part.replace(/[/{/}\\n\\t]/g, '');\n\t\t\tobjStr += (i + 1) < partsArr.length ? ',\\n' : '\\n';\n\t\t}\n\t\tif (partsArr.length > 1) {\n\t\t\tobjStr += '\\t\\t\\t\\t}';\n\t\t} else {\n\t\t\tobjStr += '}';\n\t\t}\n\t\treturn objStr;\n\t}\n\t/**\n\t * This assumes a very simple function. Meaning no loops or conditional statements\n\t * If loops or conditional statements are encountered, the indentation will not be\n\t * correct for those\n\t * @private\n\t * @param {any} valueFunctionPart\n\t * @returns {string}\n\t */\n\tprivate _parseValueFunction(valueFunctionPart): string {\n\t\tlet funcStr = '';\n\t\tif (valueFunctionPart) {\n\t\t\tlet funcArr = valueFunctionPart.split('\\n');\n\t\t\tlet idx = 0;\n\t\t\tfuncArr.forEach((element) => {\n\t\t\t\tif ((idx === 0 && element) || (idx === 1 && element)) {\n\t\t\t\t\tfuncStr += '\\t\\t\\t' + element.replace(/\\n\\t/g, '') + '\\n';\n\t\t\t\t} else if (idx === funcArr.length - 1) {\n\t\t\t\t\tfuncStr += '\\t' + element.replace(/\\n\\t/g, '');\n\t\t\t\t} else if (element) {\n\t\t\t\t\tfuncStr += '\\t' + element.replace(/\\n\\t/g, '') + '\\n';\n\t\t\t\t}\n\t\t\t\tidx++;\n\t\t\t});\n\t\t}\n\t\treturn funcStr;\n\t}\n\t/**\n\t * Builds the string representation of this property\n\t * @returns {string}\n\t * @todo If there isn't a comment, we should have everything we need to create one\n\t */\n\ttoMarkup(): string {\n\t\tlet nameParts = this.name.split(':');\n\t\tlet comment = this.comment && this.comment.commentText ? '\\n' + this.comment.toMarkup() : '\\n' + this.derivedComment.toMarkup();\n\t\tlet propStr = comment;\n\t\tpropStr += '\\t\\t\\t' + nameParts[0];\n\t\tpropStr += ': ';\n\t\tpropStr += this._parseParams();\n\t\treturn propStr;\n\t}\n}"]}